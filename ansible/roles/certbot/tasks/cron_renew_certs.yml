---
- name: Copy netcup credentials to the server
  ansible.builtin.copy:
    src: netcup.ini
    dest: /root/.secrets/certbot/netcup.ini
    owner: root
    group: root
    mode: '0600'

# This will never be actually run on the host itself, it just exists
# so the directory and config structure exists
- name: Install Certbot on Ubuntu/Debian
  ansible.builtin.apt:
    name: certbot
    state: present

- name: >
    Disable the systemd certbot.timer service that would trigger renews
    but will be unable to run with this setup because of missing dependencies
  ansible.builtin.systemd:
    name: certbot.timer
    enabled: false
    state: stopped

- name: Make sure the target directory to deploy certificates to exists
  ansible.builtin.file:
    path: /etc/haproxy/ssl
    state: directory
    mode: '0700'

- name: Install cron to renew existing certificates
  ansible.builtin.cron:
    name: "renew existing certificates"
    job: >
      docker run --rm
      -v /root/.secrets/certbot/netcup.ini:/root/.secrets/certbot/netcup.ini
      -v /etc/letsencrypt:/etc/letsencrypt
      -v /etc/haproxy/ssl:/etc/haproxy/ssl
      -v /var/log/letsencrypt:/var/log/letsencrypt
      --cap-drop=all
      certbot-dns-netcup:latest
      certbot renew
      --deploy-hook
      "cat \$RENEWED_LINEAGE/privkey.pem \$RENEWED_LINEAGE/fullchain.pem
      > /etc/haproxy/ssl/\$(echo \$RENEWED_DOMAINS |
      awk '{print \$1}' |
      awk -F . '{print \$1}').pem"
      >> /var/log/letsencrypt/letsencrypt.log
      && systemctl restart haproxy
    minute: "0"
    hour: "3"
