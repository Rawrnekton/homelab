global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Maximale Verbindungen, die HAProxy verarbeiten kann
    maxconn 4096

    # SSL/TLS Konfig
    ssl-default-bind-ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options no-sslv3 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
    bind *:80
    http-request redirect scheme https if !{ ssl_fc }

{% for service in services %}
frontend https-{{ service.name }}-in
    bind *:443 ssl crt /etc/ssl/private/{{ service.name }}.pem
    mode http
    acl host_backend hdr(host) -i {{ service.name }}.cindergla.de
    acl host_backend hdr(host) -i {{ service.name }}.k8s.internal.cindergla.de
    use_backend backend_hosts if host_backend

{% endfor %}
backend backend_hosts
    mode http
    tcp-request inspect-delay 5s
{% for server in groups['argo'] %}
    server {{ server }} {{ hostvars[server]['ansible_default_ipv4']['address'] }}:443 ssl verify none
{% endfor %}

